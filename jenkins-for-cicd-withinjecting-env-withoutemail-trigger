pipeline {
    agent any

    environment {
        imageName = "smartping"
        registryCredentials = "nexus-credentials-placeholder"
        registry = "registry-url-placeholder"
        dockerImage = ''
        version = ":latest"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('codefetch') {
            steps {
                git branch: 'dev-branch-placeholder', credentialsId: 'git-credentials-placeholder', url: 'git-repo-url-placeholder'
            }
        }

        stage('Update Environment File') {
            steps {
                script {
                    sh '''
                        echo "REACT_APP_API_PORT=api-port-placeholder" > .env
                        echo "REACT_APP_API_PORT_DLT=api-port-dlt-placeholder" >> .env
                        echo "REACT_APP_API_SCRUB=api-scrub-placeholder" >> .env
                        echo "REACT_APP_SAMPLES_IP=samples-ip-placeholder" >> .env
                    '''
                }
            }
        }

        stage('Building image') {
            steps {
                script {
                    dockerImage = docker.build(imageName)
                }
            }
        }

        stage('Uploading to Nexus') {
            steps {
                script {
                    docker.withRegistry('http://' + registry, registryCredentials) {
                        dockerImage.push('latest')
                    }
                }
            }
        }

        stage('Stop previous containers') {
            steps {
                script {
                    sh "ssh user@host-ip-placeholder 'docker ps -f name=smartping -q | xargs --no-run-if-empty docker container stop'"
                }
            }
        }

        stage('Remove older containers') {
            steps {
                script {
                    sh "ssh user@host-ip-placeholder 'docker container ls -a -f name=smartping -q | xargs -r docker container rm'"
                }
            }
        }

        stage('Remove older images') {
            steps {
                script {
                    sh "ssh user@host-ip-placeholder 'cd /path/to/project ; sudo docker rmi registry-url-placeholder/smartping -f '"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh "ssh user@host-ip-placeholder 'cd /path/to/project ; sudo docker compose up -d smartping'"
                }
            }
        }
    }
}
